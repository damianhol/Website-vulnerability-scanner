function r(r){return r&&"object"==typeof r&&"default"in r?r:{default:r}}var e=/*#__PURE__*/r(require("isomorphic-unfetch"));function t(){return t=Object.assign?Object.assign.bind():function(r){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(r[n]=t[n])}return r},t.apply(this,arguments)}var n=["model"],i=/*#__PURE__*/function(){function r(r,e){void 0===e&&(e={}),this.apiKey=void 0,this.defaultOptions=void 0,this.apiKey=r,this.defaultOptions=e}var i=r.prototype;return i.fillMask=function(r,e){try{return Promise.resolve(this.request(r,e))}catch(r){return Promise.reject(r)}},i.summarization=function(r,e){try{return Promise.resolve(this.request(r,e)).then(function(r){return null==r?void 0:r[0]})}catch(r){return Promise.reject(r)}},i.questionAnswer=function(r,e){try{return Promise.resolve(this.request(r,e))}catch(r){return Promise.reject(r)}},i.tableQuestionAnswer=function(r,e){try{return Promise.resolve(this.request(r,e))}catch(r){return Promise.reject(r)}},i.textClassification=function(r,e){try{return Promise.resolve(this.request(r,e)).then(function(r){return null==r?void 0:r[0]})}catch(r){return Promise.reject(r)}},i.textGeneration=function(r,e){try{return Promise.resolve(this.request(r,e)).then(function(r){return null==r?void 0:r[0]})}catch(r){return Promise.reject(r)}},i.tokenClassification=function(e,t){try{var n=r.toArray;return Promise.resolve(this.request(e,t)).then(function(e){return n.call(r,e)})}catch(r){return Promise.reject(r)}},i.translation=function(r,e){try{return Promise.resolve(this.request(r,e)).then(function(r){return null==r?void 0:r[0]})}catch(r){return Promise.reject(r)}},i.zeroShotClassification=function(e,t){try{var n=r.toArray;return Promise.resolve(this.request(e,t)).then(function(e){return n.call(r,e)})}catch(r){return Promise.reject(r)}},i.conversational=function(r,e){try{return Promise.resolve(this.request(r,e))}catch(r){return Promise.reject(r)}},i.featureExtraction=function(r,e){try{return Promise.resolve(this.request(r,e))}catch(r){return Promise.reject(r)}},i.automaticSpeechRecognition=function(r,e){try{return Promise.resolve(this.request(r,t({},e,{binary:!0})))}catch(r){return Promise.reject(r)}},i.audioClassification=function(r,e){try{return Promise.resolve(this.request(r,t({},e,{binary:!0})))}catch(r){return Promise.reject(r)}},i.imageClassification=function(r,e){try{return Promise.resolve(this.request(r,t({},e,{binary:!0})))}catch(r){return Promise.reject(r)}},i.objectDetection=function(r,e){try{return Promise.resolve(this.request(r,t({},e,{binary:!0})))}catch(r){return Promise.reject(r)}},i.imageSegmentation=function(r,e){try{return Promise.resolve(this.request(r,t({},e,{binary:!0})))}catch(r){return Promise.reject(r)}},i.request=function(r,i){try{var o=this,s=t({},o.defaultOptions,i),u=r.model,c=function(r,e){if(null==r)return{};var t,n,i={},o=Object.keys(r);for(n=0;n<o.length;n++)e.indexOf(t=o[n])>=0||(i[t]=r[t]);return i}(r,n);return Promise.resolve(e.default("https://api-inference.huggingface.co/models/"+u,{headers:{Authorization:"Bearer "+o.apiKey},method:"POST",body:null!=i&&i.binary?r.data:JSON.stringify(t({},c,{options:s}))})).then(function(e){return!1===s.retry_on_error||503!==e.status||s.wait_for_model?Promise.resolve(e.json()).then(function(r){if(r.error)throw new Error(r.error);return r}):o.request(r,t({},s,{wait_for_model:!0}))})}catch(r){return Promise.reject(r)}},r.toArray=function(r){return Array.isArray(r)?r:[r]},r}();exports.HuggingFace=i,exports.default=i;
//# sourceMappingURL=index.cjs.map
